{"ast":null,"code":"import { ADD_NEWS, DELETE_NEWS, FETCH_NEWS_ERROR, FETCH_NEWS_PENDING, FETCH_NEWS_SUCCESS, GET_NEWS } from \"../../contants/constant\";\nconst initialstate = {\n  loading: false,\n  error: '',\n  news: []\n};\n\nconst Reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case ADD_NEWS:\n      // console.log('action', action.payload);\n      return {\n        news: [action.payload, ...state.news]\n      };\n\n    case GET_NEWS:\n      console.log('action', action.payload);\n      let arr = state.news.filter((data, id) => id == action.payload); // console.log('filter data',state.news.filter(data => data.id === action.payload) );\n\n      arr = arr.values();\n\n      for (let val of arr) {\n        arr = val;\n        console.log('array of value', arr);\n      }\n\n      return { ...state,\n        newsinfo: arr\n      };\n\n    case UPDATE_USER:\n      return { ...state,\n        news: state.news.map(user => user.id === action.payload.id ? action.payload : user)\n      };\n\n    case DELETE_NEWS:\n      // console.log('action', action.payload);\n      return { ...state,\n        news: state.news.filter((news, id) => id !== action.payload // console.log('news', news.id)\n        )\n      };\n\n    case FETCH_NEWS_PENDING:\n      // console.log('in pending case' , action.payload);\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_NEWS_SUCCESS:\n      // console.log('in success case' ,'hi', state, 'action',action);\n      return { ...state,\n        loading: false,\n        news: action.news\n      };\n\n    case FETCH_NEWS_ERROR:\n      // console.log('in error case' , action.payload);\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\nexport const getNews = state => state.news;\nexport const getNewsPending = state => state.loading;\nexport const getNewsError = state => state.error;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/redux/Reducers/Reducer.js"],"names":["ADD_NEWS","DELETE_NEWS","FETCH_NEWS_ERROR","FETCH_NEWS_PENDING","FETCH_NEWS_SUCCESS","GET_NEWS","initialstate","loading","error","news","Reducer","state","action","type","payload","console","log","arr","filter","data","id","values","val","newsinfo","UPDATE_USER","map","user","getNews","getNewsPending","getNewsError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,kBAAlD,EAAsEC,kBAAtE,EAA0FC,QAA1F,QAA0G,yBAA1G;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AACI;AAEA,aAAO;AACHS,QAAAA,IAAI,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,IAA1B;AADH,OAAP;;AAMJ,SAAKJ,QAAL;AACIU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAM,CAACE,OAA7B;AACA,UAAIG,GAAG,GAAGN,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAkB,CAACC,IAAD,EAAMC,EAAN,KAAaA,EAAE,IAAIR,MAAM,CAACE,OAA5C,CAAV,CAFJ,CAGI;;AACAG,MAAAA,GAAG,GAAGA,GAAG,CAACI,MAAJ,EAAN;;AACA,WAAK,IAAIC,GAAT,IAAgBL,GAAhB,EAAqB;AAEjBA,QAAAA,GAAG,GAAGK,GAAN;AACAP,QAAAA,OAAO,CAACC,GAAR,CACI,gBADJ,EACsBC,GADtB;AAGH;;AACD,aAAO,EACH,GAAGN,KADA;AAEHY,QAAAA,QAAQ,EAAEN;AAFP,OAAP;;AAOA,SAAKO,WAAL;AACI,aAAM,EACJ,GAAGb,KADC;AAEJF,QAAAA,IAAI,EAACE,KAAK,CAACF,IAAN,CAAWgB,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYR,MAAM,CAACE,OAAP,CAAeM,EAA3B,GAAgCR,MAAM,CAACE,OAAvC,GAAiDY,IAA1E;AAFD,OAAN;;AAKR,SAAKzB,WAAL;AACI;AAEA,aAAO,EACH,GAAGU,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAkB,CAACT,IAAD,EAAOW,EAAP,KACpBA,EAAE,KAAKR,MAAM,CAACE,OADZ,CAEF;AAFE;AAFH,OAAP;;AAQJ,SAAKX,kBAAL;AACI;AAEA,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKH,kBAAL;AACI;AACA,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHV,OAAP;;AAKJ,SAAKP,gBAAL;AACI;AAEA,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAHX,OAAP;;AAMJ;AACI,aAAOG,KAAP;AAtER;AAwEH,CAzED;;KAAMD,O;AA2EN,eAAeA,OAAf;AACA,OAAO,MAAMiB,OAAO,GAAGhB,KAAK,IAAIA,KAAK,CAACF,IAA/B;AACP,OAAO,MAAMmB,cAAc,GAAGjB,KAAK,IAAIA,KAAK,CAACJ,OAAtC;AACP,OAAO,MAAMsB,YAAY,GAAGlB,KAAK,IAAIA,KAAK,CAACH,KAApC","sourcesContent":["import { ADD_NEWS, DELETE_NEWS, FETCH_NEWS_ERROR, FETCH_NEWS_PENDING, FETCH_NEWS_SUCCESS, GET_NEWS } from \"../../contants/constant\"\n\n\n\nconst initialstate = {\n    loading: false,\n    error: '',\n    news: [],\n    \n}\n\nconst Reducer = (state = initialstate, action) => {\n    switch (action.type) {\n        case ADD_NEWS:\n            // console.log('action', action.payload);\n\n            return {\n                news: [action.payload, ...state.news],\n\n            }\n\n\n        case GET_NEWS:\n            console.log('action', action.payload);\n            let arr = state.news.filter((data,id) => id == action.payload)\n            // console.log('filter data',state.news.filter(data => data.id === action.payload) );\n            arr = arr.values();\n            for (let val of arr) {\n          \n                arr = val\n                console.log(\n                    'array of value', arr\n                );\n            }\n            return {\n                ...state,\n                newsinfo: arr\n\n            }\n\n\n            case UPDATE_USER:\n                return{\n                  ...state,\n                  news:state.news.map((user) => user.id === action.payload.id ? action.payload : user)\n                }\n\n        case DELETE_NEWS:\n            // console.log('action', action.payload);\n\n            return {\n                ...state,\n                news: state.news.filter((news, id) =>\n                    id !== action.payload ,\n                    // console.log('news', news.id)\n                )\n            }\n\n        case FETCH_NEWS_PENDING:\n            // console.log('in pending case' , action.payload);\n\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_NEWS_SUCCESS:\n            // console.log('in success case' ,'hi', state, 'action',action);\n            return {\n                ...state,\n                loading: false,\n                news: action.news\n            }\n        case FETCH_NEWS_ERROR:\n            // console.log('in error case' , action.payload);\n\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default Reducer\nexport const getNews = state => state.news;\nexport const getNewsPending = state => state.loading;\nexport const getNewsError = state => state.error;\n"]},"metadata":{},"sourceType":"module"}