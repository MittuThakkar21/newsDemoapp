{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/demoapp/src/components/Add.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Formik, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props); // console.log(field);\n  // console.log(meta);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst MySelect = ({\n  label,\n  ...props\n}) => {\n  _s2();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MySelect;\n\nconst Add = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        description: '',\n        created_date: '',\n        publisher: '',\n        category: ''\n      },\n      validationSchema: Yup.object({\n        title: Yup.string().max(20, 'Must be 15 characters or less').required('Required'),\n        description: Yup.string().max(50, 'Must be 15 characters').required('Required'),\n        created_date: Yup.string().required('Required'),\n        publisher: Yup.string().required('Required'),\n        category: Yup.string().oneOf([\"Software\", \"It\", \"Politics\", \"other\"], \"Invalid category Type\").required('Required')\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"col-lg-1 col-offset-6 centered\",\n        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Title\",\n          name: \"title\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Description\",\n          name: \"description\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Created_date\",\n          name: \"created_date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Publisher\",\n          name: \"publisher\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n          label: \"Category\",\n          name: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a News type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Software\",\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"It\",\n            children: \"It\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Politics\",\n            children: \"Politics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Add;\nexport default Add;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MySelect\");\n$RefreshReg$(_c3, \"Add\");","map":{"version":3,"sources":["/home/botree/Desktop/demoapp/src/components/Add.js"],"names":["React","Form","Formik","useField","Yup","Link","MyTextInput","label","props","field","meta","id","touched","error","color","MySelect","name","Add","title","description","created_date","publisher","category","object","string","max","required","oneOf","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Formik, useField } from 'formik'\nimport * as Yup from 'yup'\nimport { Link } from 'react-router-dom';\n\nconst MyTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    // console.log(field);\n    // console.log(meta);\n    return (\n        <>\n            <label htmlFor={props.id || props.label}>{label}</label>\n            <input className=\"text-input\" {...field} {...props} />\n            {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n        </>\n    )\n}\n\nconst MySelect = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n        <div>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <select {...field} {...props} />\n            {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n        </div>\n\n    );\n}\n\nconst Add = () => {\n    return (\n        <>\n            <h1>Add News</h1>\n            <Formik\n                initialValues={{\n                    title: '',\n                    description: '',\n                    created_date: '',\n                    publisher: '',\n                    category: ''\n\n                }}\n                validationSchema={Yup.object({\n                    title: Yup.string()\n                        .max(20, 'Must be 15 characters or less')\n                        .required('Required'),\n                    description: Yup.string()\n                        .max(50, 'Must be 15 characters')\n                        .required('Required'),\n                    created_date: Yup.string()\n                        .required('Required'),\n                    publisher: Yup.string()\n                        .required('Required'),\n                    category: Yup.string()\n                        .oneOf(\n                            [\"Software\", \"It\", \"Politics\", \"other\"],\n                            \"Invalid category Type\"\n                        )\n                        .required('Required'),\n\n\n                })}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                    }, 400);\n                }}\n            >\n                <Form\n                    className=\"col-lg-1 col-offset-6 centered\">\n                    <MyTextInput\n                        label=\"Title\"\n                        name=\"title\"\n                        type=\"text\"\n                    /><br />\n\n                    <MyTextInput\n                        label=\"Description\"\n                        name=\"description\"\n                        type=\"text\"\n                    /><br />\n\n                    <MyTextInput\n                        label=\"Created_date\"\n                        name=\"created_date\"\n                        type=\"date\"\n                    /><br />\n\n                    <MyTextInput\n                        label=\"Publisher\"\n                        name=\"publisher\"\n                        type=\"text\"\n                    /><br />\n\n                    <MySelect label='Category' name='category'>\n                        <option value=\"\">Select a News type</option>\n                        <option value=\"Software\">Software</option>\n                        <option value=\"It\">It</option>\n                        <option value=\"Politics\">Politics</option>\n                        <option value=\"other\">Other</option>\n                    </MySelect><br />\n\n                    <button type=\"submit\">Add</button>\n                    <button type=\"reset\">Reset</button>\n                    <Link to='/' className=\"btn btn-primary\">Cancel</Link>\n                    {/* \n                    <div>\n                        {\n                            values.map((ele) => {\n                                return(\n                                    <p>{ele}</p>\n\n                                )\n                            })\n                        }\n                    </div> */}\n\n                </Form>\n            </Formik>\n        </>\n    )\n}\n\nexport default Add\n"]},"metadata":{},"sourceType":"module"}