{"ast":null,"code":"import { ADD_NEWS, DELETE_NEWS, FETCH_NEWS_ERROR, FETCH_NEWS_PENDING, FETCH_NEWS_SUCCESS, GET_NEWS } from \"../../contants/constant\";\nconst initialstate = {\n  loading: false,\n  error: '',\n  // newsdata: [],\n  news: [],\n  newsinfo: null\n};\n\nconst Reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case ADD_NEWS:\n      // console.log('action', action.payload);\n      return {\n        news: [action.payload, ...state.news]\n      };\n\n    case GET_NEWS:\n      console.log('action', action.payload);\n      let arr = state.news.filter(data => data.id === action.payload);\n      console.log('filter data', state.news.filter(data => data.id === action.payload));\n      arr = arr.values();\n\n      for (let val of arr) {\n        // console.log(\n        //     'array of value', val\n        // );\n        arr = val;\n      }\n\n      return { ...state,\n        newsinfo: arr\n      };\n\n    case DELETE_NEWS:\n      // console.log('action', action.payload);\n      return { ...state,\n        news: state.news.filter(news => news.id !== action.payload // console.log('news', news.id)\n        )\n      };\n\n    case FETCH_NEWS_PENDING:\n      // console.log('in pending case' , action.payload);\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_NEWS_SUCCESS:\n      // console.log('in success case' ,'hi', state, 'action',action);\n      return { ...state,\n        loading: false,\n        news: action.news\n      };\n\n    case FETCH_NEWS_ERROR:\n      // console.log('in error case' , action.payload);\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\nexport const getNews = state => state.news;\nexport const getNewsPending = state => state.loading;\nexport const getNewsError = state => state.error;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/redux/Reducers/Reducer.js"],"names":["ADD_NEWS","DELETE_NEWS","FETCH_NEWS_ERROR","FETCH_NEWS_PENDING","FETCH_NEWS_SUCCESS","GET_NEWS","initialstate","loading","error","news","newsinfo","Reducer","state","action","type","payload","console","log","arr","filter","data","id","values","val","getNews","getNewsPending","getNewsError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,kBAAlD,EAAsEC,kBAAtE,EAA0FC,QAA1F,QAA0G,yBAA1G;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjB;AACAC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AACI;AAEA,aAAO;AACHS,QAAAA,IAAI,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,IAA1B;AADH,OAAP;;AAMJ,SAAKJ,QAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAM,CAACE,OAA7B;AACA,UAAIG,GAAG,GAAGN,KAAK,CAACH,IAAN,CAAWU,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACE,OAA7C,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,KAAK,CAACH,IAAN,CAAWU,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACE,OAA7C,CAA1B;AACAG,MAAAA,GAAG,GAAGA,GAAG,CAACI,MAAJ,EAAN;;AACA,WAAK,IAAIC,GAAT,IAAgBL,GAAhB,EAAqB;AACjB;AACA;AACA;AACAA,QAAAA,GAAG,GAAGK,GAAN;AACH;;AACD,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA,QAAQ,EAAEQ;AAFP,OAAP;;AAMJ,SAAKjB,WAAL;AACI;AAEA,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWU,MAAX,CAAkBV,IAAI,IACxBA,IAAI,CAACY,EAAL,KAAYR,MAAM,CAACE,OADjB,CAEF;AAFE;AAFH,OAAP;;AAQJ,SAAKZ,kBAAL;AACI;AAEA,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKH,kBAAL;AACI;AACA,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAHV,OAAP;;AAKJ,SAAKP,gBAAL;AACI;AAEA,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAHX,OAAP;;AAMJ;AACI,aAAOI,KAAP;AA9DR;AAgEH,CAjED;;KAAMD,O;AAmEN,eAAeA,OAAf;AACA,OAAO,MAAMa,OAAO,GAAGZ,KAAK,IAAIA,KAAK,CAACH,IAA/B;AACP,OAAO,MAAMgB,cAAc,GAAGb,KAAK,IAAIA,KAAK,CAACL,OAAtC;AACP,OAAO,MAAMmB,YAAY,GAAGd,KAAK,IAAIA,KAAK,CAACJ,KAApC","sourcesContent":["import { ADD_NEWS, DELETE_NEWS, FETCH_NEWS_ERROR, FETCH_NEWS_PENDING, FETCH_NEWS_SUCCESS, GET_NEWS } from \"../../contants/constant\"\n\n\n\nconst initialstate = {\n    loading: false,\n    error: '',\n    // newsdata: [],\n    news: [],\n    newsinfo: null\n}\n\nconst Reducer = (state = initialstate, action) => {\n    switch (action.type) {\n        case ADD_NEWS:\n            // console.log('action', action.payload);\n\n            return {\n                news: [action.payload, ...state.news],\n\n            }\n\n\n        case GET_NEWS:\n            console.log('action', action.payload);\n            let arr = state.news.filter(data => data.id === action.payload)\n            console.log('filter data',state.news.filter(data => data.id === action.payload) );\n            arr = arr.values();\n            for (let val of arr) {\n                // console.log(\n                //     'array of value', val\n                // );\n                arr = val\n            }\n            return {\n                ...state,\n                newsinfo: arr\n\n            }\n\n        case DELETE_NEWS:\n            // console.log('action', action.payload);\n\n            return {\n                ...state,\n                news: state.news.filter(news =>\n                    news.id !== action.payload ,\n                    // console.log('news', news.id)\n                )\n            }\n\n        case FETCH_NEWS_PENDING:\n            // console.log('in pending case' , action.payload);\n\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_NEWS_SUCCESS:\n            // console.log('in success case' ,'hi', state, 'action',action);\n            return {\n                ...state,\n                loading: false,\n                news: action.news\n            }\n        case FETCH_NEWS_ERROR:\n            // console.log('in error case' , action.payload);\n\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default Reducer\nexport const getNews = state => state.news;\nexport const getNewsPending = state => state.loading;\nexport const getNewsError = state => state.error;\n"]},"metadata":{},"sourceType":"module"}