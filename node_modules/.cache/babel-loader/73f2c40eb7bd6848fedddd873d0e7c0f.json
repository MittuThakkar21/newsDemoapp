{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteNews } from '../Actions/Action';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport JSONDATA from '../Data/data.json';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [searchtitle, setsearchTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [isFilter, setIsFilter] = useState(false); // console.log('start date' ,startDate);\n\n  const renderFilterData = () => {\n    let filteredData = JSONDATA.filter(val => {\n      if (searchtitle == \"\") {\n        return val;\n      } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n        return val;\n      }\n    });\n\n    if (isFilter) {\n      filteredData = filteredData.filter(val => {\n        const sdate = moment(startDate);\n        const edate = moment(endDate);\n        const publishedAt = moment(val.publishedAt);\n        return publishedAt.isSameOrAfter(sdate) && publishedAt.isSameOrBefore(edate);\n      });\n    }\n\n    console.log('filter data', filteredData);\n    filteredData = filteredData.map((data = {}, id) => {\n      var _data$source, _data$source2;\n\n      {\n        /* console.log(data) */\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.publishedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `edit/${id}`,\n            news: {\n              nid: id,\n              title: data.title,\n              author: data.author,\n              name: (_data$source2 = data.source) === null || _data$source2 === void 0 ? void 0 : _data$source2.name // name: data.name,\n              // publishedAt: data.publishedAt,\n              // phnumber: data.phnumbers\n\n            } //api name response\n            //name: data.source?.name,\n\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(deleteNews(id)),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    });\n    return filteredData;\n  };\n\n  const filterData = () => {\n    setIsFilter(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: filterData,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: e => {\n          setsearchTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"PublishedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), renderFilterData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"bzhkt2ItbV8hbD7Dq1bbs48yq6w=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js"],"names":["React","useState","Link","deleteNews","DatePicker","JSONDATA","moment","Search","searchtitle","setsearchTitle","startDate","setStartDate","Date","endDate","setEndDate","isFilter","setIsFilter","renderFilterData","filteredData","filter","val","title","toLowerCase","includes","sdate","edate","publishedAt","isSameOrAfter","isSameOrBefore","console","log","map","data","id","author","source","name","pathname","news","nid","dispatch","filterData","date","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { deleteNews } from '../Actions/Action'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport JSONDATA from '../Data/data.json'\nimport moment from 'moment';\n\n\nconst Search = () => {\n    const [searchtitle, setsearchTitle] = useState(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [isFilter, setIsFilter] = useState(false);\n\n    // console.log('start date' ,startDate);\n\n    const renderFilterData = () => {\n        let filteredData = JSONDATA.filter((val) => {\n\n            if (searchtitle == \"\") {\n                return val\n            } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n                return val\n            }\n        })\n        if (isFilter) {\n            filteredData = filteredData.filter((val) => {\n\n                const sdate = moment(startDate)\n                const edate = moment(endDate)\n                const publishedAt = moment(val.publishedAt)\n\n\n                return publishedAt.isSameOrAfter(sdate) && publishedAt.isSameOrBefore(edate)\n            })\n        }\n        console.log('filter data', filteredData);\n        filteredData = filteredData.map((data = {}, id) => {\n            {/* console.log(data) */ }\n            return (\n                <tr key={data.id}>\n                    <td>{data.title}</td>\n                    <td>{data.author}</td>\n                    <td>{data.source?.name}</td>\n                    <td>{data.name}</td>\n                    <td>{data.publishedAt}</td>\n                    {/* <td>{data.phnumbers.map((ele) => <td>{ele}</td>)}</td> */}\n\n\n                    {/* <td>{data.source?.name}</td> */}\n                    {/* <td>{data.category}</td> */}\n                    <Link to={{\n                        pathname: `edit/${id}`,\n                        news: {\n                            nid: id,\n                            title: data.title,\n                            author: data.author,\n                            name: data.source?.name,\n                            // name: data.name,\n                            // publishedAt: data.publishedAt,\n                            // phnumber: data.phnumbers\n                        }\n                        //api name response\n                        //name: data.source?.name,\n                    }} ><button>Edit</button></Link>\n                    <button onClick={() => dispatch(deleteNews(id))} >Delete</button>\n                </tr>\n            )\n\n        })\n        return filteredData;\n    }\n\n\n    const filterData = () => {\n        setIsFilter(true)\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                    <DatePicker selected={endDate} onChange={date => setEndDate(date)} />\n                    <button onClick={filterData}>Filter</button>\n                </div><br />\n                <input type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => {\n                        setsearchTitle(e.target.value)\n                    }}\n\n                ></input>\n            </div>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Author</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">PublishedAt</th>\n                        <th scope=\"col\">Phone Numbers</th>\n                        {/* <th scope=\"col\"></th> */}\n                    </tr>\n                </thead>\n                {renderFilterData()}\n\n            </table>\n        </div>\n    )\n\n}\n\n\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}