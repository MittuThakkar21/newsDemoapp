{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom';\nimport { deleteNews } from '../Actions/Action';\nimport JSONDATA from '../Data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [searchtitle, setsearchTitle] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"PublishedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), JSONDATA.filter(val => {\n        if (searchtitle == \"\") {\n          return val;\n        } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n          return val;\n        }\n      }).map((data = {}, id) => {\n        var _data$source, _data$source2;\n\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.publishedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `edit/${id}`,\n              news: {\n                nid: id,\n                title: data.title,\n                author: data.author,\n                name: (_data$source2 = data.source) === null || _data$source2 === void 0 ? void 0 : _data$source2.name,\n                // name: data.name,\n                publishedAt: data.publishedAt // phnumber: data.phnumbers\n\n              } //api name response\n              //name: data.source?.name,\n\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(deleteNews(id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"9JO3AmS4InSDevUrL08/KtLWCRE=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js"],"names":["React","useState","Link","deleteNews","JSONDATA","Search","searchtitle","setsearchTitle","filter","val","title","toLowerCase","includes","map","data","id","console","log","author","source","name","publishedAt","pathname","news","nid","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKG,QAAQ,CAACI,MAAT,CAAiBC,GAAD,IAAS;AAE1B,YAAGH,WAAW,IAAI,EAAlB,EAAqB;AACjB,iBAAOG,GAAP;AACH,SAFD,MAEM,IAAGA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCN,WAAW,CAACK,WAAZ,EAAjC,CAAH,EAA+D;AACjE,iBAAOF,GAAP;AACH;AACA,OAPA,EAOEI,GAPF,CAOM,CAACC,IAAI,GAAG,EAAR,EAAYC,EAAZ,KAAmB;AAAA;;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,4BACI;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKI,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sCAAKJ,IAAI,CAACK,MAAV,iDAAK,aAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKI;AAAA,sBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,kBALJ,eAWI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AACNC,cAAAA,QAAQ,EAAG,QAAOP,EAAG,EADf;AAENQ,cAAAA,IAAI,EAAE;AACFC,gBAAAA,GAAG,EAAET,EADH;AAEFL,gBAAAA,KAAK,EAAEI,IAAI,CAACJ,KAFV;AAGFQ,gBAAAA,MAAM,EAAEJ,IAAI,CAACI,MAHX;AAIFE,gBAAAA,IAAI,mBAAEN,IAAI,CAACK,MAAP,kDAAE,cAAaC,IAJjB;AAKF;AACAC,gBAAAA,WAAW,EAAEP,IAAI,CAACO,WANhB,CAOF;;AAPE,eAFA,CAWN;AACA;;AAZM,aAAV;AAAA,mCAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAyBI;AAAQ,YAAA,OAAO,EAAE,MAAMI,QAAQ,CAACtB,UAAU,CAACY,EAAD,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA,WAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AA6BH,OAtCA,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6DH,CA/DD;;GAAMV,M;;KAAAA,M;AAmEN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteNews } from '../Actions/Action'\n\nimport JSONDATA from '../Data/data.json'\n\n\nconst Search = () => {\n    const [searchtitle, setsearchTitle] = useState(\"\");\n    return (\n        <div>\n            <div>\n                <input type=\"text\" placeholder=\"Search...\"></input>\n            </div>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Author</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">PublishedAt</th>\n                        <th scope=\"col\">Phone Numbers</th>\n                        {/* <th scope=\"col\"></th> */}\n                    </tr>\n                </thead>\n\n                {JSONDATA.filter((val) => {\n\n                if(searchtitle == \"\"){\n                    return val\n                }else if(val.title.toLowerCase().includes(searchtitle.toLowerCase())){\n                    return val\n                }\n                }).map((data = {}, id) => {\n                    console.log(data)\n                    return (\n                        <tr key={data.id}>\n                            <td>{data.title}</td>\n                            <td>{data.author}</td>\n                            <td>{data.source?.name}</td>\n                            {/* <td>{data.name}</td> */}\n                            <td>{data.publishedAt}</td>\n                            {/* <td>{data.phnumbers.map((ele) => <td>{ele}</td>)}</td> */}\n\n                            {/* api name rsponse \n                                <td>{data.source?.name}</td>\n                                {/* <td>{data.category}</td> */}\n                            <Link to={{\n                                pathname: `edit/${id}`,\n                                news: {\n                                    nid: id,\n                                    title: data.title,\n                                    author: data.author,\n                                    name: data.source?.name,\n                                    // name: data.name,\n                                    publishedAt: data.publishedAt,\n                                    // phnumber: data.phnumbers\n                                }\n                                //api name response\n                                //name: data.source?.name,\n                            }} ><button>Edit</button></Link>\n                            <button onClick={() => dispatch(deleteNews(id))} >Delete</button>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n\n}\n\n\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}