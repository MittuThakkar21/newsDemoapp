{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Edit.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Field, Form, Formik, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNews, getNews } from '../redux/Action'; // import { useEffect } from 'react';\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), \".\", meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true);\n}; // const MySelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <div>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n//         </div>\n//     );\n// }\n\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst Edit = () => {\n  _s2();\n\n  const newsinfo = useSelector(state => state.news.newsinfo);\n  console.log(\"news  in add component\", newsinfo);\n  const {\n    id\n  } = useParams();\n  const {\n    title,\n    author,\n    name,\n    publishedAt\n  } = newsinfo || {};\n  console.log('name is', newsinfo.source.name); // console.log('id from params', id);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateData = () => {\n    if (newsinfo != null) {}\n\n    dispatch(getNews(id));\n  }; // useEffect(() => {\n  //     // if(newsinfo != null){\n  //     // }\n  //     dispatch(getNews(id))\n  // },[])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: title,\n        author: author,\n        name: name,\n        publishedAt: publishedAt // category: ''\n\n      },\n      validationSchema: Yup.object({\n        title: Yup.string().max(20, 'Must be 15 characters or less').required('Required'),\n        author: Yup.string().max(50, 'Must be 15 characters').required('Required'),\n        name: Yup.string().required('Required'),\n        publishedAt: Yup.string().required('Required') // category: Yup.string()\n        //     .oneOf(\n        //         [\"Software\", \"It\", \"Politics\", \"other\"],\n        //         \"Invalid category Type\"\n        //     )\n        //     .required('Required'),\n\n      }),\n      onSubmit: values => {// alert(JSON.stringify(values))\n        // history.push('/')\n      },\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: props.handleSubmit,\n        className: \"col-lg-1 col-offset-6 centered\",\n        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Title\",\n          name: \"title\",\n          type: \"text\",\n          onChange: props.handleChange,\n          value: props.values.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Author\",\n          name: \"author\",\n          type: \"text\",\n          onChange: props.handleChange,\n          value: props.values.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Name\",\n          name: \"name\",\n          type: \"text\",\n          onChange: props.handleChange,\n          value: props.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"PublishedAt\",\n          name: \"publishedAt\",\n          type: \"date\",\n          onChange: props.handleChange,\n          value: props.values.publishedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateData(),\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), \",\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Edit, \"j0ykLl7X/mpHf+J2LjOZHiZY+pQ=\", false, function () {\n  return [useSelector, useParams, useDispatch, useHistory];\n});\n\n_c2 = Edit;\nexport default Edit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"Edit\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Edit.js"],"names":["React","useEffect","Field","Form","Formik","useField","Yup","Link","useHistory","useParams","useDispatch","useSelector","addNews","getNews","useState","MyTextInput","label","props","field","meta","id","touched","error","color","Edit","newsinfo","state","news","console","log","title","author","name","publishedAt","source","dispatch","history","updateData","object","string","max","required","values","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Field, Form, Formik, useField } from 'formik'\nimport * as Yup from 'yup'\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNews, getNews } from '../redux/Action';\n// import { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst MyTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.id || props.label}>{label}</label>\n            <input className=\"text-input\" {...field} {...props} />.\n            {/* {console.log('field are', { ...props })} */}\n            {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n        </>\n    )\n}\n\n// const MySelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <div>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n//         </div>\n\n//     );\n// }\n\nconst Edit = () => {\n    const newsinfo = useSelector(state => state.news.newsinfo)\n    console.log(\"news  in add component\",  newsinfo);\n    const { id } = useParams();\n  \n    const {title, author,name, publishedAt} = newsinfo || {}\n    console.log('name is',newsinfo.source.name);      \n    // console.log('id from params', id);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const updateData = () => {\n        if(newsinfo != null){\n\n        }\n        dispatch(getNews(id))\n        \n    }\n\n    // useEffect(() => {\n    //     // if(newsinfo != null){\n            \n    //     // }\n    //     dispatch(getNews(id))\n    // },[])\n\n\n    return (\n        <>\n            <h1>Edit News</h1>\n            <Formik \n                initialValues={{\n                    title: title,\n                    author: author,\n                    name: name,\n                    publishedAt: publishedAt,\n                    // category: ''\n\n                }}\n                validationSchema={Yup.object({\n                    title: Yup.string()\n                        .max(20, 'Must be 15 characters or less')\n                        .required('Required'),\n                    author: Yup.string()\n                        .max(50, 'Must be 15 characters')\n                        .required('Required'),\n                    name: Yup.string()\n                        .required('Required'),\n                    publishedAt: Yup.string()\n                        .required('Required'),\n                    // category: Yup.string()\n                    //     .oneOf(\n                    //         [\"Software\", \"It\", \"Politics\", \"other\"],\n                    //         \"Invalid category Type\"\n                    //     )\n                    //     .required('Required'),\n\n\n                })}\n                onSubmit={(values) => {\n                    // alert(JSON.stringify(values))\n                 \n                    // history.push('/')\n                }}\n            >\n                {props => (\n\n                    <Form onSubmit={props.handleSubmit}\n                        className=\"col-lg-1 col-offset-6 centered\">\n                        <MyTextInput\n                            label=\"Title\"\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={props.handleChange}\n                            value={props.values.title}\n\n                        /><br />\n\n                        <MyTextInput\n                            label=\"Author\"\n                            name=\"author\"\n                            type=\"text\"\n                            onChange={props.handleChange}\n                            value={props.values.author}\n                        /><br />\n\n                        <MyTextInput\n                            label=\"Name\"\n                            name=\"name\"\n                            type=\"text\"\n                            onChange={props.handleChange}\n                            value={props.values.name}\n                        /><br />\n\n                        <MyTextInput\n                            label=\"PublishedAt\"\n                            name=\"publishedAt\"\n                            type=\"date\"\n                            onChange={props.handleChange}\n                            value={props.values.publishedAt}\n                        /><br /><br /><br />\n\n                        {/* <MySelect label='Category' name='category'>\n                            <option value=\"\">Select a News type</option>\n                            <option value=\"Software\">Software</option>\n                            <option value=\"It\">It</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"other\">Other</option>\n                        </MySelect><br /> */}\n\n                        <button onClick={updateData()} type=\"submit\">Update</button>\n                        <button type=\"reset\">Reset</button>,\n                        <Link to='/' className=\"btn btn-primary\"><button>Cancel</button></Link><br /><br />\n                    </Form>\n                )}\n            </Formik>\n            <table className=\"table\">\n                {/* <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Created_date</th>\n                        <th scope=\"col\">Publisher</th>\n                        <th scope=\"col\">Category</th>\n\n                    </tr>\n                </thead> */}\n                {/* {newsdata.map((data,id) => {\n                    console.log(id)\n                    return (\n\n\n                        <tr key={id}>\n                            <td>{data.title}</td>\n                            <td>{data.description}</td>\n                            <td>{data.created_date}</td>\n                            <td>{data.publisher}</td>\n                            <td>{data.category}</td>\n                            <Link to = '/edit'></Link><button>Edit</button>\n                            <button>Delete</button>\n\n\n                        </tr>\n                    )\n\n                })} */}\n                <tbody>\n\n                </tbody>\n            </table>\n        </>\n    )\n}\n\n\n\nexport default Edit\n"]},"metadata":{},"sourceType":"module"}