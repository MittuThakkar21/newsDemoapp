{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom';\nimport { deleteNews } from '../Actions/Action';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport JSONDATA from '../Data/data.json';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [searchtitle, setsearchTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date()); // console.log('start date' ,startDate);\n\n  const filterData = () => {\n    const result = JSONDATA.filter(val => {\n      console.log('val', JSONDATA);\n      const sdate = moment(startDate).format('YYYY-MM-DD');\n      const edate = moment(endDate).format('YYYY-MM-DD'); // const publishedAt = moment(val.publishedAt).format('YYYY-MM-DD')\n      // var s = \"2021-04-28T11:00:00Z\"\n      // var e = \"2021-04-30T11:00:00Z\"\n      // console.log('value of sdate', sdate);\n      // console.log('value of sdate', edate);\n      // console.log('value of pubblished', publishedAt);\n\n      return val.publishedAt >= sdate && val.publishedAt <= edate;\n    }).map(e => {\n      console.log(e);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    });\n    console.log('result', result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: filterData,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: e => {\n          setsearchTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"PublishedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Phone Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), JSONDATA.filter(val => {\n        if (searchtitle == \"\") {\n          return val;\n        } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n          return val;\n        }\n      }).map((data = {}, id) => {\n        var _data$source, _data$source2;\n\n        {\n          /* console.log(data) */\n        }\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.publishedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `edit/${id}`,\n              news: {\n                nid: id,\n                title: data.title,\n                author: data.author,\n                name: (_data$source2 = data.source) === null || _data$source2 === void 0 ? void 0 : _data$source2.name,\n                // name: data.name,\n                publishedAt: data.publishedAt // phnumber: data.phnumbers\n\n              } //api name response\n              //name: data.source?.name,\n\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(deleteNews(id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"DcTnR4mCeoI1ZvP5oC2uBIo1qwU=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js"],"names":["React","useState","Link","deleteNews","DatePicker","JSONDATA","moment","Search","searchtitle","setsearchTitle","startDate","setStartDate","Date","endDate","setEndDate","filterData","result","filter","val","console","log","sdate","format","edate","publishedAt","map","e","title","date","target","value","toLowerCase","includes","data","id","author","source","name","pathname","news","nid","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAAtC,CAHiB,CAKjB;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGX,QAAQ,CAACY,MAAT,CAAiBC,GAAD,IAAS;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAoBf,QAApB;AACE,YAAMgB,KAAK,GAAGf,MAAM,CAACI,SAAD,CAAN,CAAkBY,MAAlB,CAAyB,YAAzB,CAAd;AACA,YAAMC,KAAK,GAAGjB,MAAM,CAACO,OAAD,CAAN,CAAgBS,MAAhB,CAAuB,YAAvB,CAAd,CAHkC,CAIlC;AAEA;AACA;AAEA;AACA;AACA;;AAGA,aAAOJ,GAAG,CAACM,WAAJ,IAAmBH,KAAnB,IAA4BH,GAAG,CAACM,WAAJ,IAAmBD,KAAtD;AACH,KAfY,EAeVE,GAfU,CAeLC,CAAD,IAAO;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACA,0BAAO;AAAA,kBAAIA,CAAC,CAACC;AAAN;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAlBY,CAAf;AAmBER,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBJ,MAAvB;AACH,GArBD;;AAuBA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAEN,SAAtB;AAAiC,UAAA,QAAQ,EAAEkB,IAAI,IAAIjB,YAAY,CAACiB,IAAD;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAEf,OAAtB;AAA+B,UAAA,QAAQ,EAAEe,IAAI,IAAId,UAAU,CAACc,IAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAEb,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKU;AAAA;AAAA;AAAA;AAAA,cALV,eAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,WAAW,EAAC,WADhB;AAEI,QAAA,QAAQ,EAAGW,CAAD,IAAO;AACbjB,UAAAA,cAAc,CAACiB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKzB,QAAQ,CAACY,MAAT,CAAiBC,GAAD,IAAS;AAEtB,YAAIV,WAAW,IAAI,EAAnB,EAAuB;AACnB,iBAAOU,GAAP;AACH,SAFD,MAEO,IAAIA,GAAG,CAACS,KAAJ,CAAUI,WAAV,GAAwBC,QAAxB,CAAiCxB,WAAW,CAACuB,WAAZ,EAAjC,CAAJ,EAAiE;AACpE,iBAAOb,GAAP;AACH;AACJ,OAPA,EAOEO,GAPF,CAOM,CAACQ,IAAI,GAAG,EAAR,EAAYC,EAAZ,KAAmB;AAAA;;AACtB;AAAC;AAAyB;AAC1B,4BACI;AAAA,kCACI;AAAA,sBAAKD,IAAI,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKM,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sCAAKF,IAAI,CAACG,MAAV,iDAAK,aAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKI;AAAA,sBAAKJ,IAAI,CAACT;AAAV;AAAA;AAAA;AAAA;AAAA,kBALJ,eAWI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AACNc,cAAAA,QAAQ,EAAG,QAAOJ,EAAG,EADf;AAENK,cAAAA,IAAI,EAAE;AACFC,gBAAAA,GAAG,EAAEN,EADH;AAEFP,gBAAAA,KAAK,EAAEM,IAAI,CAACN,KAFV;AAGFQ,gBAAAA,MAAM,EAAEF,IAAI,CAACE,MAHX;AAIFE,gBAAAA,IAAI,mBAAEJ,IAAI,CAACG,MAAP,kDAAE,cAAaC,IAJjB;AAKF;AACAb,gBAAAA,WAAW,EAAES,IAAI,CAACT,WANhB,CAOF;;AAPE,eAFA,CAWN;AACA;;AAZM,aAAV;AAAA,mCAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAyBI;AAAQ,YAAA,OAAO,EAAE,MAAMiB,QAAQ,CAACtC,UAAU,CAAC+B,EAAD,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA,WAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AA6BH,OAtCA,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwEH,CAtGD;;GAAM3B,M;;KAAAA,M;AA0GN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteNews } from '../Actions/Action'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport JSONDATA from '../Data/data.json'\nimport moment from 'moment';\n\n\n\nconst Search = () => {\n    const [searchtitle, setsearchTitle] = useState(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n\n    // console.log('start date' ,startDate);\n\n    const filterData = () => {\n      const result = JSONDATA.filter((val) => {\n          console.log('val' , JSONDATA); \n            const sdate = moment(startDate).format('YYYY-MM-DD')\n            const edate = moment(endDate).format('YYYY-MM-DD')\n            // const publishedAt = moment(val.publishedAt).format('YYYY-MM-DD')\n\n            // var s = \"2021-04-28T11:00:00Z\"\n            // var e = \"2021-04-30T11:00:00Z\"\n\n            // console.log('value of sdate', sdate);\n            // console.log('value of sdate', edate);\n            // console.log('value of pubblished', publishedAt);\n\n                \n            return val.publishedAt >= sdate && val.publishedAt <= edate\n        }).map((e) => {\n            console.log(e)\n            return <p>{e.title}</p>\n        })\n        console.log('result' , result);\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                    <DatePicker selected={endDate} onChange={date => setEndDate(date)} />\n                    <button onClick={filterData}>Filter</button>\n                </div><br />\n                <input type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => {\n                        setsearchTitle(e.target.value)\n                    }}\n\n                ></input>\n            </div>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Author</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">PublishedAt</th>\n                        <th scope=\"col\">Phone Numbers</th>\n                        {/* <th scope=\"col\"></th> */}\n                    </tr>\n                </thead>\n\n                {JSONDATA.filter((val) => {\n\n                    if (searchtitle == \"\") {\n                        return val\n                    } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n                        return val\n                    }\n                }).map((data = {}, id) => {\n                    {/* console.log(data) */ }\n                    return (\n                        <tr key={data.id}>\n                            <td>{data.title}</td>\n                            <td>{data.author}</td>\n                            <td>{data.source?.name}</td>\n                            {/* <td>{data.name}</td> */}\n                            <td>{data.publishedAt}</td>\n                            {/* <td>{data.phnumbers.map((ele) => <td>{ele}</td>)}</td> */}\n\n                            {/* api name rsponse \n                                <td>{data.source?.name}</td>\n                                {/* <td>{data.category}</td> */}\n                            <Link to={{\n                                pathname: `edit/${id}`,\n                                news: {\n                                    nid: id,\n                                    title: data.title,\n                                    author: data.author,\n                                    name: data.source?.name,\n                                    // name: data.name,\n                                    publishedAt: data.publishedAt,\n                                    // phnumber: data.phnumbers\n                                }\n                                //api name response\n                                //name: data.source?.name,\n                            }} ><button>Edit</button></Link>\n                            <button onClick={() => dispatch(deleteNews(id))} >Delete</button>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n\n}\n\n\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}