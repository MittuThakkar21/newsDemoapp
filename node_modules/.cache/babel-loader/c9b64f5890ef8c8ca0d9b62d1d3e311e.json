{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteNews } from '../Actions/Action';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport JSONDATA from '../Data/data.json';\nimport moment from 'moment';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const PER_PAGE = 10;\n  const [searchtitle, setsearchTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [isFilter, setIsFilter] = useState(false);\n  const [isPaginate, setIsPaginate] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [data, setData] = useState(JSONDATA);\n  const offset = currentPage * PER_PAGE; // console.log('start date' ,startDate);\n\n  const renderFilterData = () => {\n    let filteredData = JSONDATA.filter(val => {\n      if (searchtitle == \"\") {\n        return val;\n      } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n        return val;\n      }\n    });\n\n    if (isFilter) {\n      filteredData = filteredData.filter(val => {\n        const sdate = moment(startDate);\n        const edate = moment(endDate);\n        const publishedAt = moment(val.publishedAt);\n        return publishedAt.isSameOrAfter(sdate) && publishedAt.isSameOrBefore(edate);\n      });\n    }\n\n    if (isPaginate) {\n      const pag = data.slice(offset, offset + PER_PAGE).map(ele => {});\n    }\n\n    console.log('filter data', filteredData);\n    filteredData = filteredData.map((data = {}, id) => {\n      var _data$source;\n\n      const publish = moment(data.publishedAt).format('MMMM Do YYYY, h:mm:ss a'); // console.log('publish', publish);\n\n      {\n        /* console.log(data) */\n      }\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: publish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(deleteNews(id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          pageCount: pageCount,\n          onClick: paginate,\n          onChange: handlePageClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n    return filteredData;\n  };\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const filterData = () => {\n    setIsFilter(true);\n  };\n\n  const paginate = () => {\n    setIsPaginate(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          minDate: new Date()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: filterData,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: e => {\n          setsearchTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"PublishedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), renderFilterData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"KzyDMmEKGXWkzeL7ReTlLa/dwU8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Search.js"],"names":["React","useState","Link","deleteNews","DatePicker","JSONDATA","moment","Pagination","Search","PER_PAGE","searchtitle","setsearchTitle","startDate","setStartDate","Date","endDate","setEndDate","isFilter","setIsFilter","isPaginate","setIsPaginate","currentPage","setCurrentPage","data","setData","offset","renderFilterData","filteredData","filter","val","title","toLowerCase","includes","sdate","edate","publishedAt","isSameOrAfter","isSameOrBefore","pag","slice","map","ele","console","log","id","publish","format","author","source","name","dispatch","pageCount","paginate","handlePageClick","selected","selectedPage","filterData","date","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { deleteNews } from '../Actions/Action'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport JSONDATA from '../Data/data.json'\nimport moment from 'moment';\nimport Pagination from './Pagination';\n\n\nconst Search = () => {\n\n    const PER_PAGE = 10;\n\n    const [searchtitle, setsearchTitle] = useState(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [isFilter, setIsFilter] = useState(false);\n\n\n    const [isPaginate, setIsPaginate] = useState(false);\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [data, setData] = useState(JSONDATA);\n\n\n    const offset = currentPage * PER_PAGE;\n\n    // console.log('start date' ,startDate);\n\n    const renderFilterData = () => {\n        let filteredData = JSONDATA.filter((val) => {\n\n            if (searchtitle == \"\") {\n                return val\n            } else if (val.title.toLowerCase().includes(searchtitle.toLowerCase())) {\n                return val\n            }\n        })\n        if (isFilter) {\n            filteredData = filteredData.filter((val) => {\n\n                const sdate = moment(startDate)\n                const edate = moment(endDate)\n                const publishedAt = moment(val.publishedAt)\n\n\n                return publishedAt.isSameOrAfter(sdate) && publishedAt.isSameOrBefore(edate)\n            })\n        }\n\n        if (isPaginate) {\n            const pag = data.slice(offset, offset + PER_PAGE).map((ele) => { })\n\n\n        }\n        console.log('filter data', filteredData);\n        filteredData = filteredData.map((data = {}, id) => {\n            const publish = moment(data.publishedAt).format('MMMM Do YYYY, h:mm:ss a')\n            // console.log('publish', publish);\n            {/* console.log(data) */ }\n            return (\n                <>\n                    <tr key={data.id}>\n                        <td>{data.title}</td>\n                        <td>{data.author}</td>\n                        <td>{data.source?.name}</td>\n                        <td>{data.name}</td>\n                        <td>{publish}</td>\n\n                        <button>Edit</button>\n                        <button onClick={() => dispatch(deleteNews(id))} >Delete</button>\n                    </tr>\n                    <Pagination pageCount={pageCount} onClick={paginate} onChange={handlePageClick} />\n                </>\n            )\n\n        })\n        return filteredData;\n    }\n\n    function handlePageClick({ selected: selectedPage }) {\n        setCurrentPage(selectedPage);\n    }\n    const filterData = () => {\n        setIsFilter(true)\n    }\n\n    const paginate = () => {\n        setIsPaginate(true)\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                    <DatePicker\n                        selected={endDate}\n                        onChange={date => setEndDate(date)}\n                        minDate={new Date()}\n                    />\n                    <button onClick={filterData}>Filter</button>\n                </div><br />\n                <input type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => {\n                        setsearchTitle(e.target.value)\n                    }}\n\n                ></input>\n            </div>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Author</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">PublishedAt</th>\n                        {/* <th scope=\"col\">Phone Numbers</th> */}\n\n                    </tr>\n                </thead>\n                {renderFilterData()}\n\n            </table>\n        </div>\n    )\n\n}\n\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}