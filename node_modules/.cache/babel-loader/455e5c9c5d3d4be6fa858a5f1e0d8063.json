{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom';\nimport { deleteNews } from '../Actions/Action';\nimport { connect, useDispatch } from 'react-redux';\nimport { fetchNewsData } from '../Actions/Action';\nimport Search from './Search';\nimport JSONDATA from '../Data/data.json';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  news,\n  fetchNewsData\n}) => {\n  _s();\n\n  // console.log('news in container', news);\n  const PER_PAGE = 10;\n  const dispatch = useDispatch();\n  const [data, setData] = useState(news);\n  const [currentPage, setCurrentPage] = useState(0);\n  const offset = currentPage * PER_PAGE;\n  const pageCount = Math.ceil(data.length / PER_PAGE);\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    fetchNewsData();\n    setData(news);\n  }, [news]);\n  return news.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this) : news.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: news.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"HOME PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), news.slice(offset, offset + PER_PAGE).map((data = {}, id) => {\n        var _data$source, _data$source2;\n\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.publishedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `edit/${id}`,\n              news: {\n                nid: id,\n                title: data.title,\n                author: data.author,\n                name: (_data$source2 = data.source) === null || _data$source2 === void 0 ? void 0 : _data$source2.name,\n                // name: data.name,\n                publishedAt: data.publishedAt // phnumber: data.phnumbers\n\n              } //api name response\n              //name: data.source?.name,\n\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(deleteNews(id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: pageCount,\n      onPageChange: handlePageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Home, \"nLFjEUTmPNlHuiKoP8JJYv3vCWk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => {\n  // console.log('state toprops', state, 'news', state.news.news);\n  return {\n    news: state.news.news\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchNewsData: () => dispatch(fetchNewsData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home); // export default Home\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Home.js"],"names":["React","useEffect","useState","Link","deleteNews","connect","useDispatch","fetchNewsData","Search","JSONDATA","ReactPaginate","Home","news","PER_PAGE","dispatch","data","setData","currentPage","setCurrentPage","offset","pageCount","Math","ceil","length","handlePageClick","selected","selectedPage","loading","error","slice","map","id","console","log","title","author","source","name","publishedAt","pathname","nid","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteNews } from '../Actions/Action'\nimport { connect, useDispatch } from 'react-redux';\nimport { fetchNewsData } from '../Actions/Action';\nimport Search from './Search';\nimport JSONDATA from '../Data/data.json'\nimport ReactPaginate from 'react-paginate';\n\n\n\nconst Home = ({ news, fetchNewsData }) => {\n    // console.log('news in container', news);\n    const PER_PAGE = 10;\n    const dispatch = useDispatch();\n\n    const [data, setData] = useState(news);\n\n    const [currentPage, setCurrentPage] = useState(0);\n\n\n\n    const offset = currentPage * PER_PAGE;\n    const pageCount = Math.ceil(data.length / PER_PAGE);\n\n    function handlePageClick({ selected: selectedPage }) {\n        setCurrentPage(selectedPage);\n    }\n\n    useEffect(() => {\n        fetchNewsData()\n        setData(news)\n    }, [news])\n\n    return (\n        news.loading ? (\n            <h2>Loading</h2>\n        ) : news.error ? (\n            <h2>{news.error}</h2>\n        ) : (\n            <div>\n                <h2>HOME PAGE</h2>\n                <Link to='/add'><button>Add</button></Link><br /><br />\n\n                <Search />\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {/* <th scope=\"col\">Title</th>\n                            <th scope=\"col\">Author</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">PublishedAt</th>\n                            <th scope=\"col\">Phone Numbers</th> */}\n                            {/* <th scope=\"col\"></th> */}\n                        </tr>\n                    </thead>\n\n                    {news.slice(offset, offset + PER_PAGE).map((data = {}, id) => {\n                        console.log(data)\n                        return (\n                            <tr key={data.id}>\n                                <td>{data.title}</td>\n                                <td>{data.author}</td>\n                                <td>{data.source?.name}</td>\n                                {/* <td>{data.name}</td> */}\n                                <td>{data.publishedAt}</td>\n                                {/* <td>{data.phnumbers.map((ele) => <td>{ele}</td>)}</td> */}\n\n                                {/* api name rsponse \n                                <td>{data.source?.name}</td>\n                                {/* <td>{data.category}</td> */}\n                                <Link to={{\n                                    pathname: `edit/${id}`,\n                                    news: {\n                                        nid: id,\n                                        title: data.title,\n                                        author: data.author,\n                                        name: data.source?.name,\n                                        // name: data.name,\n                                        publishedAt: data.publishedAt,\n                                        // phnumber: data.phnumbers\n                                    }\n                                    //api name response\n                                    //name: data.source?.name,\n                                }} ><button>Edit</button></Link>\n                                <button onClick={() => dispatch(deleteNews(id))} >Delete</button>\n                            </tr>\n                        )\n                    })}\n                </table>\n                <ReactPaginate\n                    pageCount={pageCount}\n                    onPageChange={handlePageClick}\n                />\n            </div>\n        )\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log('state toprops', state, 'news', state.news.news);\n    return {\n        news: state.news.news\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchNewsData: () => dispatch(fetchNewsData())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n\n// export default Home\n"]},"metadata":{},"sourceType":"module"}