{"ast":null,"code":"var _jsxFileName = \"/home/botree/Desktop/Demoprojects/demoapp/src/components/Add.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Formik, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNews } from '../redux/Action';\nimport shortid from 'shortid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst MySelect = ({\n  label,\n  ...props\n}) => {\n  _s2();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MySelect;\n\nconst Add = () => {\n  _s3();\n\n  const news = useSelector(state => state.news.news);\n  console.log(\"news  in add component\", news);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        description: '',\n        created_date: '',\n        publisher: '',\n        category: ''\n      },\n      validationSchema: Yup.object({\n        title: Yup.string().max(20, 'Must be 15 characters or less').required('Required'),\n        description: Yup.string().max(50, 'Must be 15 characters').required('Required'),\n        created_date: Yup.string().required('Required'),\n        publisher: Yup.string().required('Required'),\n        category: Yup.string().oneOf([\"Software\", \"It\", \"Politics\", \"other\"], \"Invalid category Type\").required('Required')\n      }),\n      onSubmit: (values, {\n        id = shortid.generate()\n      }) => {\n        console.log('name is', Formik.values);\n        alert(values);\n        dispatch(addNews(values, id));\n        history.push('/');\n      },\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"col-lg-1 col-offset-6 centered\",\n        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Title\",\n          name: \"title\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Description\",\n          name: \"description\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Created_date\",\n          name: \"created_date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Publisher\",\n          name: \"publisher\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n          label: \"Category\",\n          name: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a News type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Software\",\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"It\",\n            children: \"It\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Politics\",\n            children: \"Politics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), \",\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(Add, \"foFisZJH7rotZvrvQckANZvez9k=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c3 = Add;\nexport default Add;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MySelect\");\n$RefreshReg$(_c3, \"Add\");","map":{"version":3,"sources":["/home/botree/Desktop/Demoprojects/demoapp/src/components/Add.js"],"names":["React","Form","Formik","useField","Yup","Link","useHistory","useDispatch","useSelector","addNews","shortid","MyTextInput","label","props","field","meta","id","touched","error","color","MySelect","name","Add","news","state","console","log","dispatch","history","title","description","created_date","publisher","category","object","string","max","required","oneOf","values","generate","alert","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Formik, useField } from 'formik'\nimport * as Yup from 'yup'\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNews } from '../redux/Action';\nimport shortid from 'shortid'\n\nconst MyTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.id || props.label}>{label}</label>\n            <input className=\"text-input\" {...field} {...props} />\n            {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n        </>\n    )\n}\n\nconst MySelect = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n        <div>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <select {...field} {...props} />\n            {meta.touched && meta.error ? (<div style={{ color: 'red' }} className=\"error\">{meta.error}</div>) : null}\n        </div>\n\n    );\n}\n\nconst Add = () => {\n    const news = useSelector(state => state.news.news)\n    console.log(\"news  in add component\", news);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    return (\n        <>\n            <h1>Add News</h1>\n            <Formik\n                initialValues={{\n                    title: '',\n                    description: '',\n                    created_date: '',\n                    publisher: '',\n                    category: ''\n\n                }}\n                validationSchema={Yup.object({\n                    title: Yup.string()\n                        .max(20, 'Must be 15 characters or less')\n                        .required('Required'),\n                    description: Yup.string()\n                        .max(50, 'Must be 15 characters')\n                        .required('Required'),\n                    created_date: Yup.string()\n                        .required('Required'),\n                    publisher: Yup.string()\n                        .required('Required'),\n                    category: Yup.string()\n                        .oneOf(\n                            [\"Software\", \"It\", \"Politics\", \"other\"],\n                            \"Invalid category Type\"\n                        )\n                        .required('Required'),\n\n\n                })}\n                onSubmit={(values, { id = shortid.generate() }) => {\n                    console.log('name is', Formik.values)\n                    alert(values)\n                    dispatch(addNews(values, id))\n                    history.push('/')\n                }}\n            >\n                {props => (\n                \n                    <Form\n                        className=\"col-lg-1 col-offset-6 centered\">\n                        <MyTextInput\n                            label=\"Title\"\n                            name=\"title\"\n                            type=\"text\"\n                        /><br />\n\n                        <MyTextInput\n                            label=\"Description\"\n                            name=\"description\"\n                            type=\"text\"\n                        /><br />\n\n                        <MyTextInput\n                            label=\"Created_date\"\n                            name=\"created_date\"\n                            type=\"date\"\n                        /><br />\n\n                        <MyTextInput\n                            label=\"Publisher\"\n                            name=\"publisher\"\n                            type=\"text\"\n                        /><br />\n\n                        <MySelect label='Category' name='category'>\n                            <option value=\"\">Select a News type</option>\n                            <option value=\"Software\">Software</option>\n                            <option value=\"It\">It</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"other\">Other</option>\n                        </MySelect><br />\n\n                        <button type=\"submit\">Add</button>\n                        <button type=\"reset\">Reset</button>,\n                        <Link to='/' className=\"btn btn-primary\"><button>Cancel</button></Link><br /><br />\n                    </Form>\n                )}\n            </Formik>\n            <table className=\"table\">\n                {/* <thead>\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Created_date</th>\n                        <th scope=\"col\">Publisher</th>\n                        <th scope=\"col\">Category</th>\n\n                    </tr>\n                </thead> */}\n                {/* {newsdata.map((data,id) => {\n                    console.log(id)\n                    return (\n\n\n                        <tr key={id}>\n                            <td>{data.title}</td>\n                            <td>{data.description}</td>\n                            <td>{data.created_date}</td>\n                            <td>{data.publisher}</td>\n                            <td>{data.category}</td>\n                            <Link to = '/edit'></Link><button>Edit</button>\n                            <button>Delete</button>\n\n\n                        </tr>\n                    )\n\n                })} */}\n                <tbody>\n\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Add\n"]},"metadata":{},"sourceType":"module"}